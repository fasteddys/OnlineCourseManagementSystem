@inject OnlineCourseManagementSystem.Services.Data.IChatsService chatsService
@inject IJSRuntime JS
<style>
    .chat-item {
        width: 300px;
        height: 50px;
        border-bottom: 1px solid gray;
        font-weight: bold;
    }

        .chat-item:hover {
            cursor:pointer;
        }

   .chat-item-selected{
       color:white;
       background:#42a5f5;
   }

    .chat-name {
        font-weight:bold;
        white-space: nowrap;
        width: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size:10px;
    }

    .last-message{
        font-weight:bold;
        white-space:nowrap;
        width:100px;
        overflow:hidden;
        text-overflow:ellipsis;
    }
</style>

@{
    string selected = string.Empty;
} 

@if (this.IsSelected)
{
    selected = "chat-item-selected";
}

<div class="d-flex align-items-center chat-item @selected py-2 my-1 mx-1">
    @if (string.IsNullOrEmpty(this.Chat.IconUrl))
    {
        if (this.Chat.IsGroupChat)
        {
            <div class="bg-secondary d-flex justify-content-center align-items-center" style="width:50px; height:50px;">
                <span>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                        <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                        <path fill-rule="evenodd" d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z" />
                        <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z" />
                    </svg>
                </span>
            </div>
        }
        else
        {
            <div class="bg-secondary d-flex justify-content-center align-items-center" style="width:50px;height:50px;">
                <span>
                    @this.Chat.Name.Substring(0, 1)
                </span>
            </div>
        }
    }
    else
    {
        <img src="@this.Chat.IconUrl" alt="Chat Icon" width="50" height="50" />
    }
    <div class="ml-2 d-flex" style="font-size:10px;">
        <h6 class="flex-grow-1 chat-name">@this.Chat.Name</h6>
        <div class="dropbtn ml-5" @onclick="() => this.ChatSettingsDropdownToggle(Chat.ChatId)" @onclick:stopPropagation></div>
    </div>
</div>

@code {
    [Parameter]
    public ChatViewModel Chat { get; set; }

    [Parameter]
    public string UserId { get; set; }

    [Parameter]
    public bool IsSelected { get; set; }

    async void ChatSettingsDropdownToggle(int chatId)
    {
        string dropDown = $"myDropDown{chatId}";
        await this.JS.InvokeVoidAsync("showDropdown", dropDown);
    }

    [Parameter]
    public string LastMessage { get; set; }
}