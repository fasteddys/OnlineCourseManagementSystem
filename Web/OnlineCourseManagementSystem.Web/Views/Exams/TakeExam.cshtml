@model OnlineCourseManagementSystem.Web.ViewModels.Exams.TakeExamInputModel
@using OnlineCourseManagementSystem.Data.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@{
    this.ViewData["Title"] = this.Model.Name;
    int countOfQuestion = 1;
    int countOfChoice = 0;
    char[] letters = new char[4] { 'a', 'b', 'c', 'd' };
    ApplicationUser user = await this.userManager.GetUserAsync(this.User);

    //TimeSpan difference = DateTime.UtcNow - this.Model.StartDate;
    //double spentTime = difference.TotalMinutes;
    //double remainingTime = (double)(this.Model.Duration - spentTime);

    DateTime endDate = this.Model.StartDate.AddMinutes(this.Model.Duration);
    TimeSpan difference = endDate - DateTime.UtcNow;
    double remainingTime = difference.TotalMinutes;
}

<h1 class="text-success">@this.ViewData["Title"]</h1>
<style>
    body {
        background-color: lightskyblue;
    }

    footer {
        display: none;
        background-color: white;
    }

    .btn {
        width: 175px;
    }

    button[class*="myButton"] {
        display: none;
    }

    #hr {
        height: 10px;
        background-image: -webkit-linear-gradient(left, rgba(66,133,244,.8), rgba(66, 133, 244,.6), rgba(0,0,0,0));
    }

    #pageButton {
        background-color: orange;
        border-color: orange;
        width: 40px;
    }

    #hrNav {
        height: 10px;
        background-image: -webkit-linear-gradient(left, rgba(66,133,244,.8), rgba(66, 133, 244,.6), rgba(0,0,0,0));
    }

    #navDiv {
        background-color: lightgray;
    }
</style>

<head>
    <link rel="stylesheet" href="~/Attractive-jQuery-Circular-Countdown-Timer-Plugin-TimeCircles/inc/TimeCircles.css" />
</head>
<body class="page-has-left-panels page-has-right-panels">
    <div>
        <div class="row">
            <div class="col-md-8 container overflow-hidden">
                <form method="post" style="background-color: lightskyblue">
                    <div class="row g-md-3">
                        @foreach (var question in this.Model.Questions)
                        {

                            <div id="@countOfQuestion" class="col-md-2 border border-secondary border-bottom" style="background-color: lightgray;">
                                <div class="p-3">
                                    <p style="color: orange">Question <strong style="font-size: 20px;">@countOfQuestion</strong></p>
                                    <p>Marked out of @question.Points</p>
                                </div>
                            </div>

                            <div class="col-md-10 border border-secondary" style="background-color: lightgreen">
                                <div class="p-3">
                                    <strong style="font-size: 22px;">@(question.SanitizedText)</strong>
                                    <p class="text-danger" style="font-size: 20px;">Marks: @question.Points</p>
                                    <hr id="hr" />
                                    <input type="hidden" name="questionId" value="@question.Id" />

                                    @foreach (var choice in question.Choices)
                                    {
                                        <div style="position: relative; left: 40px;">@(letters[countOfChoice] + ". " + choice.Text)</div>
                                        <input class="radio_@countOfQuestion" type="radio" name="question_@question.Id" value="@choice.Id" style="position: relative; left: 20px; bottom: 21.5px;" />
                                        countOfChoice++;
                                    }

                                    @{
                                        countOfChoice = 0;
                                    }
                                </div>
                            </div>

                            countOfQuestion++;
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="p-3 text-center">
                                <button id="finishAttempt" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">Finish attempt ...</button>
                            </div>
                        </div>
                    </div>

                    <!-- Modal -->
                    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">End Exam</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <strong>You are going to end the exam!</strong>
                                </div>
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-danger">View Result</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-4">
                <div class="bg-light">
                    <strong style="position: relative; top: 10px; left: 20px;">Question Navigation</strong>
                    <hr id="hrNav" />
                    <div class="row gap-2">
                        @for (int i = 1; i <= this.Model.Questions.Count(); i++)
                        {
                            <div class="col-md-2">
                                <a href="/Exams/TakeExam/@this.Model.ExamId/#@i" class="btn btn-primary" style="width: 40px; position: relative; left: 20px;">@i</a>
                            </div>
                        }
                        <a style="position: relative; left: 20px;" href="/Exams/TakeExam/@this.Model.ExamId/#finishAttempt">Finish attempt ...</a>
                    </div>
                </div>

                <br />
                <div align="center">
                    <div id="exam_timer" data-timer="@(remainingTime * 60)" style="max-width: 400px; width: 100%; height: 200px;">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script type="text/javascript" src="~/Attractive-jQuery-Circular-Countdown-Timer-Plugin-TimeCircles/inc/TimeCircles.js"></script>
    <script type="text/javascript">
        $('#exam_timer').TimeCircles({
            time: {
                Days: {
                    show: false
                },
                Hours: {
                    show: false
                }
            }
        });

        setInterval(function () {
            var remaining_second = $('#exam_timer').TimeCircles
                ().getTime();
            if (remaining_second < 0) {
                $('#exampleModal').modal('show');
            }
        }, 1000);
    </script>
   
</body>