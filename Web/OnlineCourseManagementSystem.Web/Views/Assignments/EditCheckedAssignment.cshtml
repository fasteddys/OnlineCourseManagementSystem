@using OnlineCourseManagementSystem.Web.ViewModels.Assignments
@model EditCheckedUserAssignmentViewModel
@{
    this.ViewData["Title"] = "Edit Checked Assignment";
}
@*@if (this.TempData.ContainsKey("ErrorPoints"))
    {
        <div class="alert alert-danger alert-dismissible">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            @this.TempData["ErrorPoints"]
        </div>
    }


    <div class="lecture-assignment-info-container">
        <div class="edit-container">
            <form asp-controller="Assignments" asp-action="EditCheckedAssignment" asp-route-assignmentId="@this.Model.AssignmentId" asp-route-userId="@this.Model.UserId" method="post">
                @if (this.Model.PossiblePoints != null)
                {
                    <div class="form-group">
                        <label asp-for="InputModel.Points"></label>
                        <input asp-for="InputModel.Points" placeholder="possible--points--@this.Model.PossiblePoints" class="form-control" />
                        <span asp-validation-for="InputModel.Points"></span>
                    </div>
                }
                <div class="form-group ">
                    <label asp-for="InputModel.Feedback"></label>
                    <textarea asp-for="InputModel.Feedback" class="form-control"></textarea>
                    <span asp-validation-for="InputModel.Feedback"></span>
                </div>
                <button class="form-control btn-success">Edit</button>
            </form>
        </div>
        <div class="files-container">
            <h2 class="text-white" style="background:#e1dfdf;width:auto;outline: 1px solid #808080">
                Resource Files
            </h2>

            <div class="row">
                @foreach (var file in this.Model.ResourceFiles)
                {
                    <div class="col-md-3">
                        @if (file.RemoteUrl.EndsWith(".jpg"))
                        {

                            <div>
                                <img class="file-iframe" href=@file.RemoteUrl />
                            </div>
                        }
                        else
                        {
                            <div>
                                <iframe class="file-iframe" src='https://view.officeapps.live.com/op/embed.aspx?src=@file.RemoteUrl' height="400" width="400"></iframe>
                            </div>
                        }
                    </div>

                    <div class="col-md-2">
                    </div>
                }
            </div>

            <h2 class="text-white" style="background:#e1dfdf;padding:1rem;width:auto;outline: 1px solid #808080">
                Work Files
            </h2>
            @if (this.Model.TurnedOn != null)
            {
                 <div class="row">
                     @foreach (var file in this.Model.WorkFiles)
                     {
                         <div class="col-md-3">
                             @if (file.RemoteUrl.EndsWith(".jpg"))
                             {

                                 <div>
                                     <img class="file-iframe" href=@file.RemoteUrl />
                                 </div>
                             }
                             else
                             {
                                 <div>
                                     <iframe class="file-iframe" src='https://view.officeapps.live.com/op/embed.aspx?src=@file.RemoteUrl' height="400" width="400"></iframe>
                                 </div>
                             }
                         </div>
                         <div class="col-md-2">
                         </div>

                     }
                 </div>
            }
        </div>
    </div>*@

@if (this.TempData.ContainsKey("ErrorPoints"))
{
    <div class="alert alert-danger alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @this.TempData["ErrorPoints"]
    </div>
}

<h1 class="text-center myHeading">Assignment</h1>
<div class="mark-user-assignment">
    <div class="flex-column" style="height:inherit; width:inherit;">
        <div style="height: 10%;width:80%; background: #808080; color: white;">
            <p>Received Points: @this.Model.InputModel.Points</p>
            <p>Feedback: @this.Model.InputModel.Feedback</p>
        </div>
        <div class="file-display-container" id="displayed-file">
            No file choosen
        </div>
    </div>
    <div class="sidebar-assignemt-info">
        <div style="margin-left: 15px; ">
            <div style="display:grid; grid-row-gap: 40px; grid-template-columns: auto auto auto;">
                <div>
                    User: @this.Model.Username
                </div>
                <div>
                    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#EditMarkedUser" style="background:linear-gradient(to top,#36126E, #17B5B5);">
                        Edit
                    </button>
                </div>
            </div>
            <div class="text-white">
                Assignment info:
            </div>
            <div style="margin-left: 7px;">
                <p>
                    Title: @this.Model.AssignmentInfo.Title
                </p>
                <p>
                    <details>
                        <summary>
                            Instructions
                        </summary>
                        <p class="instruction-filed" style="">
                            @this.Model.AssignmentInfo.Instructions
                        </p>
                    </details>
                </p>
                <p>
                    Points:
                    @if (this.Model.AssignmentInfo.PossiblePoints != null)
                    {
                        <span>@this.Model.AssignmentInfo.PossiblePoints</span>
                    }
                    else
                    {
                        <span>None</span>
                    }
                </p>
                <p>
                    <div style="display: flex; flex-direction:row">
                        <div style="display:flex;flex-direction:column;">
                            <div style="text-align:center">
                                StartDate
                            </div>
                            <div style="text-align:center">
                                @this.Model.AssignmentInfo.StartDate
                            </div>
                        </div>
                         ->
                        <div style="display:flex;flex-direction:column;">
                            <div style="text-align:center">
                                EndDate
                            </div>

                            <div style="text-align:center">
                                @this.Model.AssignmentInfo.EndDate
                            </div>
                        </div>
                    </div>
                    Turned:
                    @if (this.Model.AssignmentInfo.TurnedOn != null)
                    {
                        <span>@this.Model.AssignmentInfo.TurnedOn</span>
                    }
                    else
                    {
                        <span>Not turned</span>
                    }
                </p>
                <p>
                    Seen:
                    @if (this.Model.AssignmentInfo.Seen)
                    {
                        <span class="badge" style="background: #00ff21; color: #00ff21">0</span>
                    }
                    else
                    {
                        <span class="badge" style="background:#ff0000;color:#ff0000">0</span>
                    }
                </p>
            </div>

        </div>
        <div style="background: linear-gradient(to top,#36126E, #17B5B5); border-radius: 5px; margin-bottom: 10px;" data-bs-toggle="collapse" data-bs-target="#collapseResourceFiles" aria-expanded="false" aria-controls="collapseResourceFiles">
            Resource files
        </div>

        <div class="assignment-files-container collapse" id="collapseResourceFiles">
            @foreach (var file in this.Model.AssignmentInfo.ResourceFiles)
            {
                @if (file.RemoteUrl.EndsWith("jpg") || file.RemoteUrl.EndsWith("png"))
                {
                    <div class="file-container" src="@file.RemoteUrl">
                        Resource file
                    </div>
                }
                else
                {
                    <div class="file-container" src="https://view.officeapps.live.com/op/embed.aspx?src=@file.RemoteUrl">
                        Resource file
                    </div>
                }
            }
        </div>

        <div style="background: linear-gradient(to top, #36126E, #17B5B5); border-radius: 5px; margin-bottom: 10px;" data-bs-toggle="collapse" data-bs-target="#collapseWorkFiles" aria-expanded="false" aria-controls="collapseWorkFiles">
            Work files
        </div>

        <div class="assignment-files-container collapse" id="collapseWorkFiles">
            @foreach (var file in this.Model.AssignmentInfo.WorkFiles)
            {
                @if (file.RemoteUrl.EndsWith(".jpg") || file.RemoteUrl.EndsWith(".png"))
                {
                    <div class="file-container" src="@file.RemoteUrl">
                        Work File
                    </div>
                }
                else
                {
                    <div class="file-container" src="https://view.officeapps.live.com/op/embed.aspx?src=@file.RemoteUrl">
                        Work File
                    </div>
                }
            }
        </div>
    </div>
</div>

<div class="modal fade" id="EditMarkedUser" tabindex="-1" aria-labelledby="EditMarkedUser" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditMarkedUser">Edit Marked User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Assignments" asp-action="EditCheckedAssignment" asp-route-assignmentId="@this.Model.AssignmentId" asp-route-userId="@this.Model.UserId" method="post">
                    @if (this.Model.AssignmentInfo.PossiblePoints != null)
                    {
                        <div class="form-group">
                            <label asp-for="InputModel.Points"></label>
                            <input asp-for="InputModel.Points" placeholder="possible--points--@this.Model.AssignmentInfo.PossiblePoints" class="form-control" />
                            <span asp-validation-for="InputModel.Points"></span>
                        </div>
                    }
                    <div class="form-group ">
                        <label asp-for="InputModel.Feedback"></label>
                        <textarea asp-for="InputModel.Feedback" class="form-control"></textarea>
                        <span asp-validation-for="InputModel.Feedback"></span>
                    </div>
                    <button class="form-control btn-success">Edit</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".file-container").click(function () {

            var files = document.getElementsByClassName("file-container");
            for (var i = 0; i < files.length; i++) {
                files[i].style.backgroundColor = "#6C6F74";
            }
            var src = $(this).attr("src");
            var displayedFileContainer = document.getElementById("displayed-file");
            displayedFileContainer.innerHTML = "";
            if (src.endsWith("jpg") || src.endsWith("png")) {
                var el = document.createElement("img");

                el.src = src;
                el.style.height = "inherit";
                el.style.width = "auto";
                el.style.maxHeight = "90%";
                el.style.maxWidth = "90%";

                displayedFileContainer.appendChild(el);
            }
            else {
                var el = document.createElement("iframe");

                el.src = src;
                el.style.height = "inherit";
                el.style.width = "inherit";
                displayedFileContainer.appendChild(el);
            }

            $(this).css("background-color", "darkslateblue");
        })

    })

</script>