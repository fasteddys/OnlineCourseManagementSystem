@using OnlineCourseManagementSystem.Web.ViewModels.Assignments
@model MarkSubmittedAssignmentViewModel
@{

}

<style>
    .mycontainer {
        overflow: hidden;
        border-radius: 10px;
    }
</style>
@if (this.TempData.ContainsKey("ErrorPoints"))
{
    <div class="alert alert-danger alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @this.TempData["ErrorPoints"]
    </div>
}

<div class="modal fade" id="MarkUser" tabindex="-1" aria-labelledby="MarkUserLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="MarkUserLabel">Mark User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Assignments" asp-action="MarkUserAssignment" asp-route-assignmentId="@this.Model.AssignmentId" asp-route-userId="@this.Model.UserId" method="post">
                    @if (this.Model.AssignmentInfo.PossiblePoints != null)
                    {
                        <div class="form-group">
                            <label asp-for="InputModel.Points"></label>
                            <select asp-for="InputModel.Points" class="form-control">
                                @for (int i = 0; i <= this.Model.AssignmentInfo.PossiblePoints; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                            @*<input asp-for="InputModel.Points" placeholder="possible--points--@this.Model.AssignmentInfo.PossiblePoints" class="form-control" />*@
                            <span asp-validation-for="InputModel.Points"></span>
                        </div>
                    }
                    <div class="form-group">
                        <label asp-for="InputModel.Feedback"></label>
                        <textarea asp-for="InputModel.Feedback" class="form-control">
                        </textarea>
                        <span asp-validation-for="InputModel.Feedback"></span>
                    </div>
                    <button class="form-control btn-success">Mark</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<h1 class="text-center my-5">Assignment: @this.Model.AssignmentInfo.Title</h1>
<div class="mycontainer">
    <div class="py-2" style="background:#3488cb">
        <div class="d-flex align-items-center position-relative m-3">
            @if (string.IsNullOrEmpty(this.Model.User.ProfileImageUrl))
            {
                <div class="d-flex justify-content-center align-items-center rounded-circle bg-secondary" style="width:50px; height:50px;">
                    <h3 class="text-center" style="color:white !important;">@(this.Model.User.FirstName.Substring(0,1)+this.Model.User.LastName.Substring(0,1)) </h3>
                </div>
            }
            else
            {
                <img class="rounded-circle" src="@this.Model.User.ProfileImageUrl" width="50" height="50" alt="Profile Image" />
            }
            <div class="mx-2 text-white flex-grow-1">
                @this.Model.User.FirstName @this.Model.User.LastName
            </div>
            <div>
                <button type="button" class="btn bg-white" data-bs-toggle="modal" data-bs-target="#MarkUser">
                    Mark
                </button>
            </div>
        </div>
        <div class="text-white-50 d-flex" style="font-size:16px">
            <p class="mx-1"> StartDate: @this.Model.AssignmentInfo.StartDate.ToString("d") @this.Model.AssignmentInfo.StartDate.ToString("t")</p>
            |
            <p class="mx-1"> EndDate: @this.Model.AssignmentInfo.EndDate.ToString("d") @this.Model.AssignmentInfo.EndDate.ToString("t")</p>
            |
            <p class="mx-1">
                @if (this.Model.AssignmentInfo.TurnedOn != null)
                {
                    <span class="badge badge-success">@this.Model.AssignmentInfo.TurnedOn</span>
                }
                else
                {
                    <span class="badge badge-danger">Not turned</span>
                }
            </p>
            <p class="mx-1">
                @if (this.Model.AssignmentInfo.Seen)
                {
                    <span class="badge badge-success">Seen</span>
                }
                else
                {
                    <span class="badge badge-danger">Not seen</span>
                }
            </p>
        </div>
    </div>
    <div class="mark-user-assignment">
        <div class="file-display-container" id="displayed-file">
            <div class="d-flex flex-column align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="150" height="150" fill="currentColor" class="bi bi-file-plus" viewBox="0 0 16 16">
                    <path d="M8.5 6a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V10a.5.5 0 0 0 1 0V8.5H10a.5.5 0 0 0 0-1H8.5V6z" />
                    <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z" />
                </svg>
                <h3>Choose file</h3>
            </div>
        </div>
        <div class="sidebar-assignemt-info">
            <div class="m-2">
                <details>
                    <summary>
                        Instructions
                    </summary>
                    @if (!string.IsNullOrEmpty(this.Model.AssignmentInfo.Instructions)
                 && !string.IsNullOrWhiteSpace(this.Model.AssignmentInfo.Instructions))
                    {
                        <p class="instruction-filed">
                            @this.Model.AssignmentInfo.Instructions
                        </p>
                    }
                    else
                    {
                        <p class="instruction-filed text-white-50">
                            No Instructions
                        </p>
                    }
                </details>
            </div>
            <div class="m-2">
                Possible Points:
                @if (this.Model.AssignmentInfo.PossiblePoints != null)
                {
                    <spanc class="badge">@this.Model.AssignmentInfo.PossiblePoints</spanc>
                }
                else
                {
                    <span class="badge">None</span>
                }
            </div>
            <div class="bg-white m-2 py-2 w-75" style="color: #42a5f5; cursor:pointer; width:100px;" data-bs-toggle="collapse" data-bs-target="#collapseResourceFiles" aria-expanded="false" aria-controls="collapseResourceFiles">
                <h6 class="mx-2">Resource files</h6>
            </div>
            <div class="assignment-files-container collapse mx-3 rounded" id="collapseResourceFiles">
                @if (this.Model.AssignmentInfo.ResourceFiles.Any())
                {
                    @foreach (var file in this.Model.AssignmentInfo.ResourceFiles)
                    {
                        @if (file.RemoteUrl.EndsWith("jpg") || file.RemoteUrl.EndsWith("png"))
                        {
                            <div class="file-container m-2" src="@file.RemoteUrl">
                                Resource file
                            </div>
                        }
                        else
                        {
                            <div class="file-container m-2" src="https://view.officeapps.live.com/op/embed.aspx?src=@file.RemoteUrl">
                                Resource file
                            </div>
                        }
                    }
                }
                else
                {
                    <div class="default-open-view" id="default">
                        No files.
                    </div>
                }
            </div>
            <div class="bg-white m-2 py-2 w-75" style="color: #42a5f5; cursor:pointer;" data-bs-toggle="collapse" data-bs-target="#collapseWorkFiles" aria-expanded="false" aria-controls="collapseWorkFiles">
                <h6 class="mx-2">
                    Work files
                </h6> 
            </div>

            <div class="assignment-files-container collapse mx-3 rounded" id="collapseWorkFiles">
                @if (this.Model.AssignmentInfo.WorkFiles.Any())
                {
                    @foreach (var file in this.Model.AssignmentInfo.WorkFiles)
                    {
                        @if (file.RemoteUrl.EndsWith(".jpg") || file.RemoteUrl.EndsWith(".png"))
                        {
                            <div class="file-container m-2" src="@file.RemoteUrl">
                                Work File
                            </div>
                        }
                        else
                        {
                            <div class="file-container m-2" src="https://view.officeapps.live.com/op/embed.aspx?src=@file.RemoteUrl">
                                Work File
                            </div>
                        }
                    }
                }
                else
                {
                    <div class="default-open-view" id="default">
                        No files.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".file-container").click(function () {

            var files = document.getElementsByClassName("file-container");
            for (var i = 0; i < files.length; i++) {
                files[i].style.backgroundColor = "#6C6F74";
            }
            var src = $(this).attr("src");
            var displayedFileContainer = document.getElementById("displayed-file");
            displayedFileContainer.innerHTML = "";
            if (src.endsWith("jpg") || src.endsWith("png")) {
                var el = document.createElement("img");

                el.src = src;
                el.style.height = "inherit";
                el.style.width = "auto";
                el.style.maxHeight = "90%";
                el.style.maxWidth = "90%";

                displayedFileContainer.appendChild(el);
            }
            else {
                var el = document.createElement("iframe");

                el.src = src;
                el.style.height = "inherit";
                el.style.width = "inherit";
                displayedFileContainer.appendChild(el);
            }

            $(this).css("background-color", "darkslateblue");
        })

    })

</script>